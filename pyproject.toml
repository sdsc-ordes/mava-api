[project]
name = "mava"
authors = [
  { name = "Stefan Milosavljevic", email = "stefan.milosavljevic@sdsc.ethz.ch" },
  { name = "Sabine Maennel", email = "sabine.maennel@sdsc.ethz.ch" },
]
description = "An ontology based API to allow video-annotation tools to communicate and exchange information."
readme = "README.md"
requires-python = ">=3.13"
version = "0.0.1"

dependencies = [
  "pydantic>=2.10.6",
  "notebook>=7.3.2",
  "pylode>=3.2.1",
  "fastapi>=0.116.1",
  "uvicorn[standard]>=0.35.0",
  "rdflib>=7.1.4",
  "python-multipart>=0.0.20",
  "mkdocs-material>=9.6.18",
  "mkdocs-render-swagger-plugin>=0.1.2",
  "pandas>=2.3.2",
]

[dependency-groups]
dev = [
  "httpx>=0.28.1",
  "ipython>=9.4.0",
  "pyshacl>=0.30.1",
  "pytest>=8.4.1",
  "rdflib>=7.1.4",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build]
exclude = [
    ".direnv",
    ".devenv",
    ".output",
]

[tool.ruff]
extend-include = ["*.ipynb"]
target-version = "py313"
line-length = 88

[tool.ruff.lint]
extend-select = [
    "W605",   # pycodestyle: invalid-escape-sequence
    "S102",   # flake8-bandit: exec-builtin
    "INP",    # flake8-no-pep420
    "PYI",    # flake8-pyi
    "PT",     # flake8-pytest-style
    "PGH",    # pygrep-hooks
    "PL",     # Pylint
    "NPY",    # NumPy-specific rules
    "RUF",    # Ruff-specific rules
]
ignore = [
    "NPY002", # numpy-legacy-random
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**" = ["INP001"]
"[!t][!e][!s][!t][!s]*/**" = ["PT"]

[tool.pytest.ini_options]
pythonpath = [
  "tests"
]
